---
- name: copy RabbitMQ tarball to /tmp
  copy: 
    src: "{{ local_tarball_file_dir }}/{{ tarball_name }}.tar.xz"
    dest: /tmp

- name: Create unpack dir
  file:
    path: /tmp/rabbitmq
    state: directory
    mode: '0755'

- name: Extract tarball into /tmp/rabbitmq
  unarchive:
    remote_src: yes
    src: "/tmp/{{ tarball_name }}.tar.xz"
    dest: /tmp/rabbitmq

# - name: make /rabbitmq belong to ubuntu
#   file:
#     path: /rabbitmq
#     state: directory
#     recurse: yes
#     owner: ubuntu
#     group: ubuntu

- name: Move extracted dir to target location
  shell: "cp -a /tmp/rabbitmq/{{ extracted_dir }}/* /rabbitmq"

- name: add sbin to path
  lineinfile: >
   dest=/etc/environment
   state=present
   backrefs=yes
   regexp='PATH=(["]*)((?!.*?/{{ sbin_dir }}).*?)(["]*)$'
   line="PATH=\1\2:{{ sbin_dir }}\3"

# - name: create symlink to rabbitmq log directory
#   file:
#     src: /rabbitmq/log
#     dest: /var/log/rabbitmq
#     owner: ubuntu
#     group: ubuntu
#     state: link
#     force: true

# - name: create symlink to rabbitmq data directory
#   file:
#     src: /rabbitmq/data
#     dest: /var/lib/rabbitmq
#     owner: ubuntu
#     group: ubuntu
#     state: link
#     force: true

# - name: create symlink to rabbitmq sbin directory
#   file:
#     src: /rabbitmq/sbin
#     dest: /usr/local/sbin
#     # owner: ubuntu
#     # group: ubuntu
#     state: link
#     force: true

- name: make var/lib/rabbitmq/ directory
  file:
    path: /rabbitmq/var/lib/rabbitmq/
    state: directory
    recurse: yes
    # owner: ubuntu
    # group: ubuntu
    mode: 0775

- name: Set rabbitmq erlang cookie
  template:
    src: erlang.cookie.j2
    dest: /rabbitmq/var/lib/rabbitmq/.erlang.cookie
    mode: 0400

- name: Set rabbitmq erlang cookie for root
  template:
    src: erlang.cookie.j2
    dest: /root/.erlang.cookie
    mode: 0400

- name: Set rabbitmq erlang cookie for ubuntu
  template:
    src: erlang.cookie.j2
    dest: /home/ubuntu/.erlang.cookie
    owner: ubuntu
    group: ubuntu
    mode: 0400

- name: Set configuration
  template:
    src: rabbitmq.conf.j2
    dest: /rabbitmq/etc/rabbitmq/rabbitmq.conf
    mode: 0400

- name: Start RabbitMQ
  command: /rabbitmq/sbin/rabbitmq-server start -detached

# - name: Wait 1 minute for RabbitMQ to start
#   pause:
#     minutes: 1

- name: Enable RabbitMQ Management plugin
  command: /rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_management
  retries: 3
  delay: 20
  register: result
  until: result.rc == 0

- name: Enable RabbitMQ top plugin
  command: /rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_top

- name: Enable RabbitMQ prometheus plugin
  command: /rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_prometheus

- name: Enable RabbitMQ Sharding plugin
  command: /rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_sharding

- name: Enable RabbitMQ Consistent Hash Exchange plugin
  command: /rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_consistent_hash_exchange
  
- name: Create benchmark vhost
  command: "/rabbitmq/sbin/rabbitmqctl add_vhost {{ default_vhost }}"

- name: Create benchmark user
  command: "/rabbitmq/sbin/rabbitmqctl add_user {{ rabbitmq_user.name }} {{ rabbitmq_user.password }}"

- name: Set adminstrator tag
  command: "/rabbitmq/sbin/rabbitmqctl set_user_tags {{ rabbitmq_user.name }} administrator"

- name: Set user permissions
  command: "/rabbitmq/sbin/rabbitmqctl set_permissions -p {{ default_vhost }} {{ rabbitmq_user.name }} '.*' '.*' '.*'"